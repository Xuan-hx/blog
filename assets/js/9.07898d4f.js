(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{48:function(n,t,e){"use strict";e.r(t);var s=e(0),i=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"content"},[t("pre",[t("code",[this._v("高阶函数\n    可以把函数当做参数传递和返回值输出\n    函数柯里化\n定义\n    接收参数，返回新函数，把参数传给新函数，最后求值\n\n作用\n    参数复用 (add函数栗子)\n    提前返回 (惰性加载)\n    延迟计算 (bind)\n\n反柯里化\n\n     统一方法，让天下没有不能用的方法\n\n函数节流\n\n    将频繁调用的函数设定在一个时间内执行，防止多次触发\n\n分时函数\n\n    一次性加载太多太多数据，吃不消，可以像node中流一样，慢慢来，别急\n\n惰性加载\n\n    函数执行的分支仅会发生一次\n")])]),t("p",[this._v("作者：chenhongdong\n链接：https://juejin.im/post/5ad6b34a6fb9a028cc61bfb3\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])])}],!1,null,null,null);t.default=i.exports}}]);