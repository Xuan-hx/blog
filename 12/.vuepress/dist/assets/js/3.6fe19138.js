(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{57:function(e,n,i){"use strict";i.r(n);var s=i(0),t=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"content"},[n("p",[this._v("1/19\n"),n("strong",[this._v("better-scroll 嵌套 swiper")])]),n("pre",[n("code",[this._v('<div class="groupbox" ref="groupbox">\n    \x3c!-- swiper  页面  --\x3e\n    <swiper :options="swiperOption" ref="mySwiper">\n    \x3c!-- v-for="slide in imgsInfo" --\x3e\n        <swiper-slide v-for="(slide,pindex) in groupAllInfo">\n            <div class="group-centent" >\n                \x3c!--  banner --\x3e\n                <div class="banimg" v-if="slide.bgimg">\n                        <img v-lazy="slide.bgimg + signmax" alt="">\n                </div>\n                \x3c!-- 动态组件 --\x3e\n                <goods-list @refreshbizlines="refSwiperGroupbox" ></goods-list>\n            </div>\n        </swiper-slide>\n    </swiper>\n</div>\n\n\nswiperindex:0,\n    swiperOption: {\n        direction : \'horizontal\', //水平方向滑动\n        //shortSwipes: false,\n        autoHeight: true,\n        observeParents:true,//当Swiper的父元素变化时，例如window.resize，Swiper更新\n        observer:true,//修改swiper自己或子元素时，自动初始化swiper\n        on:{\n            slideChange() {\n\n                    // 记录 历史top 值\n                    _this.swiperindex = this.activeIndex;\n                    _this.activeId = _this.aNavIds[this.activeIndex];\n                    // 左右挪动切换\n                    _this.adjustmentNavScroll();\n                    _this.refScrollGroupbox();\n            },\n            slideChangeTransitionStart() {\n                    if( _this.groupScroll ) {\n                                _this.arrTop[this.previousIndex] = _this.groupScroll.startY;\n                    };\n            },\n            slideChangeTransitionEnd () {\n                    _this.$refs.mySwiper.$el.style.height = window.getComputedStyle(_this.$refs.mySwiper.$children[this.activeIndex].$el).height\n                    // 在swiper 切换完成 回到记录高度  \n                    setTimeout(() => {\n                                _this.groupScroll.scrollTo(0, _this.arrTop[this.activeIndex], 300, \'\');\n                    },200)\n            },\n            resize: function(){\n            //窗口变化了\n            console.log(\'窗口变化了\')\n        }\n    }\n}\n\nadjustmentNavScroll() {\n        if(this.swiperindex > 3){\n                    let a = -parseInt((this.swiperindex -3)*13.5/75*(document.documentElement.clientWidth))\n                    this.NavScroll.scrollTo(a, 0, 300, \'easing\')\n        }else {\n                    this.NavScroll.scrollTo(0, 0, 300, \'easing\')\n        }\n},\nrefSwiperGroupbox(str) {\n        //console.log(str)\n        setTimeout(()=> {\n            //console.log(window.getComputedStyle(this.$refs.mySwiper.$children[this.swiperindex].$el).height)\n            this.$refs.mySwiper.$el.style.height = window.getComputedStyle(this.$refs.mySwiper.$children[this.swiperindex].$el).height;\n            //this.$refs.mySwiper.swiper.updateSize();\n            this.refScrollGroupbox();\n        },300)\n\n}\n')])])])}],!1,null,null,null);n.default=t.exports}}]);